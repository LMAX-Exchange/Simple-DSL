/*
 * Copyright 2011 LMAX Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'checkstyle'
    id 'idea'
}

group = 'com.lmax'
version = new Version(major: 3, minor: 0, revision: 0, snapshot: true)

defaultTasks 'build'

ext {
    fullName = 'Simple DSL'
    fullDescription = 'Simple DSL - Utilities to write a simple DSL in Java'
    teamName = 'LMAX Development Team'
    siteUrl = 'https://github.com/LMAX-Exchange/Simple-DSL'
    sourceUrl = 'git@github.com:LMAX-Exchange/Simple-DSL.git'
    moduleName = 'com.lmax'
}

apply from: 'gradle/maven.gradle'

wrapper.gradleVersion = '7.2'

repositories {
    mavenCentral()
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    checkstyle 'com.puppycrawl.tools:checkstyle:9.0.1'
    testImplementation 'junit:junit:4.13.1'
    // testImplementation 'org.hamcrest:hamcrest:2.2'
}

compileJava {
    options.fork = true
    options.debug = true
    options.warnings = true
    options.deprecation = true
}
compileTestJava {
    options.fork = true
    options.debug = true
    options.warnings = true
    options.deprecation = true
}

test {
    useJUnit()
}

javadoc {
    title = 'Simple DSL'

    options.addStringOption('XDignore.symbol.file', '-quiet')
    options.author = true
    options.bottom = "<i>Copyright &#169; 2011 - ${Calendar.instance[Calendar.YEAR]} LMAX Ltd. All Rights Reserved.</i>"
    options.use = true
    options.version = true
    options.showFromPublic()
}

jar {
    manifest.attributes(
            'Built-By': System.properties.get('user.name'),
            'Automatic-Module-Name': moduleName
    )
}

class Version {
    int major, minor = 0, revision = 0
    boolean snapshot
    String stage

    String toString() {
        "$major.$minor.$revision${stage ? '.' + stage : ''}${snapshot ? '-SNAPSHOT' : ''}"
    }
}